Index: backfire/feeds/packages/utils/incron/Makefile
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/Makefile
@@ -0,0 +1,59 @@
+# 
+# Copyright (C) 2006-2010 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=incron
+PKG_VERSION:=0.5.10
+PKG_RELEASE:=1
+
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2
+PKG_SOURCE_URL:=http://inotify.aiken.cz/download/incron
+PKG_MD5SUM:=038190dc64568883a206f3d58269b850
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/incron
+  SECTION:=utils
+  CATEGORY:=Utilities
+  SUBMENU:=Filesystem
+  TITLE:=Cron-like daemon which handles filesystem events
+  MAINTAINER:=Zhifeng Gu <guzhifeng1979@hotmail.com>
+  URL:=http://inotify.aiken.cz/
+  DEPENDS:=+uclibcxx
+endef
+
+define Package/incron/description
+ incron is an "inotify cron" system. It works like the regular cron but is
+ driven by filesystem events instead of time events. This package provides two
+ programs, a daemon called "incrond" (analogous to crond) and a table
+ manipulator "incrontab" (like "crontab").
+ incron uses the Linux Kernel inotify syscalls.
+ like cron, each user can edit its own incron tables.
+endef
+
+MAKE_VARS += \
+	CXXFLAGS="$$$$CXXFLAGS -fno-builtin -nostdinc++ -I$(STAGING_DIR)/usr/include/uClibc++" \
+	LDFLAGS="$$$$LDFLAGS -nodefaultlibs -luClibc++"
+
+#MAKE_FLAGS += \
+	CXX=g++-uc
+
+define Package/incron/install
+	$(INSTALL_DIR) $(1)/usr/sbin
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/incrond $(1)/usr/sbin
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/incrontab $(1)/usr/bin
+	$(INSTALL_DIR) $(1)/etc
+	$(INSTALL_DIR) $(1)/etc/incrontabs
+	$(INSTALL_DIR) $(1)/etc/incron.d
+	$(INSTALL_DATA) ./files/incron.conf $(1)/etc
+	$(INSTALL_DIR) $(1)/etc/init.d
+	$(INSTALL_BIN) ./files/incron.init $(1)/etc/init.d/incron
+endef
+
+$(eval $(call BuildPackage,incron))
Index: backfire/feeds/packages/utils/incron/files/incron.conf
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/files/incron.conf
@@ -0,0 +1,2 @@
+# incron config for OpenWRT
+user_table_dir = /etc/incrontabs
Index: backfire/feeds/packages/utils/incron/files/incron.init
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/files/incron.init
@@ -0,0 +1,16 @@
+#!/bin/sh /etc/rc.common
+#
+# Author: Zhifeng Gu <guzhifeng1979@hotmail.com>
+# Date: 2012/05
+# License: GPL
+
+START=99
+STOP=00
+
+start() {
+    incrond
+}
+
+stop() {
+    incrond -k
+}
Index: backfire/feeds/packages/utils/incron/patches/remove-argp
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/patches/remove-argp
@@ -0,0 +1,13 @@
+Index: incron-0.5.10/ict-main.cpp
+===================================================================
+--- incron-0.5.10.orig/ict-main.cpp
++++ incron-0.5.10/ict-main.cpp
+@@ -18,7 +18,7 @@
+  */
+ 
+ 
+-#include <argp.h>
++#include <errno.h>
+ #include <pwd.h>
+ #include <string>
+ #include <unistd.h>
Index: backfire/feeds/packages/utils/incron/patches/series
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/patches/series
@@ -0,0 +1,3 @@
+remove-argp
+use-access-instead-of-euidaccess
+compile-against-uclibc++
Index: backfire/feeds/packages/utils/incron/patches/use-access-instead-of-euidaccess
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/patches/use-access-instead-of-euidaccess
@@ -0,0 +1,13 @@
+Index: incron-0.5.10/ict-main.cpp
+===================================================================
+--- incron-0.5.10.orig/ict-main.cpp
++++ incron-0.5.10/ict-main.cpp
+@@ -493,7 +493,7 @@
+       if (uid != 0) {
+         fprintf(stderr, "insufficient privileges to use custom configuration (will use default)\n");
+       }
+-      else if (euidaccess(cfg.c_str(), R_OK) != 0) {
++      else if (access(cfg.c_str(), R_OK) != 0) {
+         perror("cannot read configuration file (will use default)");
+       }
+     }
Index: backfire/feeds/packages/utils/incron/patches/compile-against-uclibc++
===================================================================
--- /dev/null
+++ backfire/feeds/packages/utils/incron/patches/compile-against-uclibc++
@@ -0,0 +1,12 @@
+Index: incron-0.5.10/icd-main.cpp
+===================================================================
+--- incron-0.5.10.orig/icd-main.cpp
++++ incron-0.5.10/icd-main.cpp
+@@ -24,6 +24,7 @@
+ #include <dirent.h>
+ #include <syslog.h>
+ #include <errno.h>
++#include <unistd.h>
+ #include <sys/poll.h>
+ #include <sys/stat.h>
+ #include <cstdio>
